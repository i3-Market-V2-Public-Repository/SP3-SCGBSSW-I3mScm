openapi: 3.0.0
info:
  title: Smart Contract Manager API
  description: Smart Contract Manager API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: /
  - url: http://95.211.3.244:3333
  - url: http://95.211.3.249:3333
  - url: http://95.211.3.250:3333
  - url: http://95.211.3.251:3333
    variables: {}
security:
  - bearerAuth: []
tags:
  - name: Agreement
    description: Contractual Agreement between Provider and Consumer.
paths:
  /template/{offering_id}:
    get:
      tags:
        - Agreement
      summary: Request template with static and dynamic parameters
      parameters:
        - name: offering_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/template'
  /create_agreement:
    post:
      tags:
        - Agreement
      summary: Create agreement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agreement_id'
      security:
        - bearerAuth: []
  /update_agreement/{agreement_id}:
    post:
      tags:
        - Agreement
      summary: Update agreement
      parameters:
        - name: agreement_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update_msg'
      security:
        - bearerAuth: []
  /get_agreement/{agreement_id}:
    get:
      tags:
        - Agreement
      summary: Get agreement
      parameters:
        - name: agreement_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agreement_template'
      security:
        - bearerAuth: []
  /sign_agreement/{agreement_id}/{consumer_id}/{provider_id}:
    get:
      tags:
        - Agreement
      summary: Sign agreement
      parameters:
        - name: agreement_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: consumer_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: provider_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sign_msg'
      security:
        - bearerAuth: []
  /check_active_agreements:
    get:
      tags:
        - Agreement
      summary: Check active agreements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /check_agreements_by_consumer/{consumer_id}:
    get:
      tags:
        - Agreement
      summary: Check active agreements
      parameters:
        - name: consumer_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /check_agreements_by_provider/{provider_id}:
    get:
      tags:
        - Agreement
      summary: Check active agreements
      parameters:
        - name: provider_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /state/{agreement_id}:
    get:
      tags:
        - Agreement
      summary: Check active agreements
      parameters:
        - name: agreement_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/state'
      security:
        - bearerAuth: []
components:
  schemas:
    state:
      type: object
      properties:
        state:
          type: string
    sign_msg:
      type: object
      properties:
        msg:
          type: string
    update_msg:
      type: object
      properties:
        msg:
          type: string
    agreement_id:
      type: object
      properties:
        agreement_id:
          type: string
    template:
      type: object
      properties:
        DataOfferingDescription:
          type: object
          properties:
            dataOfferingId:
              type: string
            provider:
              type: string
            description:
              type: string
            title:
              type: string
            category:
              type: string
            isActive:
              type: string
        Purpose:
          type: string
        hasParties:
          type: object
          properties:
            Parties:
              type: object
              properties:
                dataProvider:
                  type: string
                dataConsumer:
                  type: string
        hasDuration:
          type: object
          properties:
            Duration:
              type: object
              properties:
                creationDate:
                  type: string
                startDate:
                  type: string
                endDate:
                  type: string
        hasDuties/Obligations:
          type: object
          properties:
            Duties/Obligations:
              type: object
              properties:
                qualityofData:
                  type: string
                characteristics:
                  type: array
                  items:
                    type: string
                dataAvailability:
                  type: string
        hasDescriptionOfData:
          type: object
          properties:
            DescriptionOfData:
              type: object
              properties:
                dataType:
                  type: string
                dataFormat:
                  type: string
                dataSource:
                  type: string
        hasIntendedUse:
          type: object
          properties:
            IntendedUse:
              type: object
              properties:
                processData:
                  type: string
                shareDataWithThirdParty:
                  type: string
                editData:
                  type: string
        hasLicenseGrant:
          type: object
          properties:
            LicenseGrant:
              type: object
              properties:
                copyData:
                  type: string
                transferable:
                  type: string
                exclusiveness:
                  type: string
                revocable:
                  type: string
        DataStream:
          type: string
    agreement_template:
      type: object
      properties:
        dataOfferingId:
          type: integer
        purpose:
          type: string
        state:
          type: integer
        providerId:
          type: string
        consumerId:
          type: string
        agreementDates:
          type: array
          items:
            type: integer
        descriptionOfData:
          type: object
          properties:
            dataType:
              type: string
            dataFormat:
              type: string
            dataSource:
              type: string
        intendedUse:
          type: object
          properties:
            processData:
              type: boolean
            editData:
              type: boolean
        licenseGrant:
          type: object
          properties:
            copydata:
              type: boolean
            transferable:
              type: boolean
            exclusiveness:
              type: boolean
            revocable:
              type: boolean
        dataStream:
          type: boolean
        signed:
          type: boolean
        violation:
          type: array
          items:
            oneOf:
              - type: integer
              - type: string
              - type: object
                properties:
                  violationType:
                    type: integer
                  issuerId:
                    type: string
    active_agreements:
      type: array
      items:
        $ref: '#/components/schemas/agreement_template'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
